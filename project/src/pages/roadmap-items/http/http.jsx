/* eslint-disable react/no-unescaped-entities */
const Http = () => (
  <div>
    <article>
      <h2>Что такое HTTP/S протокол</h2>
      <p>Что такое HTTP/S протокол</p>
      <p>HTTPS (HTTP Secure) — это расширение HTTP, которое включает шифрование данных с использованием SSL/TLS. Это обеспечивает безопасную передачу данных между клиентом и сервером, защищая от перехвата и подмены данных.</p>
    </article>
    <h3>Основные функции HTTP/HTTPS:</h3>
    <ul>
      <li><p>Методы запросов: GET, POST, PUT, DELETE и другие методы определяют тип операции, которую хочет выполнить клиент.</p>
        <p>Можно ли передать запрос через get? можно, но через post безопаснее</p>
      </li>
      <li>Статусы ответов: HTTP-коды статусов (например, 200 OK, 404 Not Found) указывают на результат запроса.</li>
      <li><p>Заголовки: Метаданные запросов и ответов, которые включают информацию о типе контента, методах аутентификации и т.д.</p>
        <p>Заголовки (headers) в HTTP и HTTPS запросах и ответах содержат метаданные, которые предоставляют дополнительную информацию о запросах и ответах. Они помогают клиенту и серверу правильно обрабатывать и понимать передаваемые данные.</p>
      </li>
    </ul>
    <h3>GET, POST</h3>
    <h4>Метод GET
    </h4>
    <p>Метод GET используется для запроса данных с сервера. При использовании GET параметры запроса передаются через URL. GET-запросы считаются "безопасными" и "идемпотентными", что означает, что они не изменяют состояние сервера и могут быть выполнены несколько раз без побочных эффектов.</p>
    <p>Характеристики</p>
    <ul>
      <li>Передача данных через URL: Данные передаются в URL через строку запроса (query string).</li>
      <li>Максимальная длина URL: URL имеет ограничение на длину (примерно 2048 символов).</li>
      <li>Кэширование: GET-запросы могут кэшироваться браузером и прокси-серверами.</li>
      <li>Закладки: URL с GET-запросами могут быть сохранены в закладках.</li>
      <li>Идемпотентность: Повторный запрос не изменяет состояние сервера.</li>
    </ul>
    <h4>Метод POST
    </h4>
    <p>Метод POST используется для отправки данных на сервер. Эти данные могут использоваться для создания новых ресурсов или обновления существующих. POST-запросы не являются идемпотентными, что означает, что повторный запрос может привести к изменению состояния сервера.</p>
    <ul>
      <li>Передача данных через тело запроса: Данные передаются в теле HTTP-запроса.</li>
      <li>Без ограничений на размер данных: POST-запросы не имеют строгих ограничений на размер данных.</li>
      <li>Безопасность: Данные не отображаются в URL, что делает метод более безопасным для передачи конфиденциальной информации (например, паролей).</li>
      <li>Не кэшируются: POST-запросы обычно не кэшируются.</li>
    </ul>
    <h4>Когда использовать
    </h4>
    <p>GET: Используется для получения данных, которые не изменяют состояние сервера. Примеры: получение страницы, поисковые запросы, загрузка изображений.</p>
    <p>POST: Используется для отправки данных, которые могут изменить состояние сервера. Примеры: отправка форм, создание новых записей в базе данных, загрузка файлов.</p>
  </div>
);

export default Http;
